/* Action */
@import "theme";

$feels: primary, success, error, warn;

@mixin feel-variations() {
  @each $feel in $feels {
    &.#{$feel} {
      @content($feel);
    }
  }
}

@function feel-hue($feel) {
  @return if($feel == warn, 600, 500);
}

@function border($color) {
  @return 2px solid $color;
}

.Action.styled {
  color: foreground();

  // BUTTONS
  &.button {
    font-size: font-size(l);
    font-weight: font-weight(extrabold);
    transition: border-color speed(s) linear;

    // Box shadow animation needs.
    &:not(.transparent) {
      padding: size(xxs) size(m) !important;
      position: relative;
      box-sizing: border-box;

      &::after {
        box-shadow: shadow(hover);
        content: "";
        opacity: 0;
        transition: opacity speed(s) linear;
        box-sizing: border-box;
        @include absolute-fill;
      }

      &:hover,
      &:active,
      &:focus {
        &::after {
          opacity: 1;
        }
      }

      &:focus {
        // This is important to ensure it takes precendence
        // over the pill border colors.
        border-color: foreground(focus) !important;
      }
    }

    // BORDER RADIUS
    &:not(.pill):not(.boxy) {
      border-radius: radius(s);

      &::after {
        border-radius: radius(s);
      }
    }

    // OUTLINED BUTTON
    &:not(.solid) {
      &:not(.transparent) {
        border: border(foreground(border));
      }

      @include feel-variations() using ($feel) {
        $hue: feel-hue($feel);
        color: color($feel, $hue);

        &:not(.transparent) {
          border: border(color($feel, $hue));
        }

        &:focus {
          border-color: foreground(focus);
        }
      }
    }

    // SOLID BUTTON
    &.solid {
      &:not(.transparent) {
        color: foreground-dark();

        &:not(.pill) {
          background-color: color(grayscale);
          border: border(color(grayscale));
        }

        @include feel-variations() using ($feel) {
          // This is important so it will override the default pill background color.
          background-color: color($feel, feel-hue($feel)) !important;
          border: border(color($feel, feel-hue($feel)));

          &:focus {
            border-color: foreground(focus);
          }
        }
      }
    }

    // SIZES
    &.s {
      font-size: font-size(m);
    }

    &.l {
      font-size: font-size(xl);
    }

    // PILL
    &.pill:not(.transparent) {
      $c: color(grayscale, 900);

      border: border($c);
      border-radius: radius(l);
      white-space: nowrap;

      &::after {
        border-radius: radius(l);
      }

      &.solid {
        background-color: $c;
      }
    }

    // TRANSPARENT
    &.transparent {
      transition: opacity speed(s) linear, color speed(s) linear;

      @include feel-variations() using ($feel) {
        $hue: feel-hue($feel);
        color: color($feel, $hue);
      }

      @include active {
        opacity: 0.7;
      }

      &:focus {
        color: foreground(focus);
      }
    }
  }

  // LINKS
  &.link {
    transition: color speed(s) linear;
    font-size: font-size(m);

    // ACTIVE STATE
    @include active {
      text-decoration: underline;
    }

    &:focus {
      color: foreground(focus);
    }

    // FEELS
    @include feel-variations() using ($feel) {
      color: color($feel, feel-hue($feel));

      &:focus {
        color: foreground(focus);
      }
    }

    // SIZES
    &.s {
      font-size: font-size(s);
    }

    &.l {
      font-size: font-size(xl);
    }
  }
}
